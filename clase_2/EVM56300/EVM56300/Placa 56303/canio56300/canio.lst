Motorola DSP56300 Assembler  Version 6.2.0   101-06-05  14:17:37  canio.asm  Page 1



1                          ;***************************************************************************
2      
1078   
1079                       ;******************************************************************************
1080   
1081                       ;---Buffer for talking to the CS4218
1082   
1083      X:000000                   org     x:$0
1084   
1085      X:000000         bits      ds      1
1086   
1087      000000           Left_ch   equ     0
1088   
1089   
1090      000300           CTRL_WD_12 equ    MIN_LEFT_ATTN+MIN_RIGHT_ATTN+LIN2+RIN2
1091      000000           CTRL_WD_34 equ    MIN_LEFT_GAIN+MIN_RIGHT_GAIN
1092   
1093   
1094   
1095   
1096      P:000100                   org     p:$100
1097                       START
1098                       main
1099      P:000100 08F4BD            movep             #$040006,x:M_PCTL       ; PLL 7 X 12.288 = 86.016MHz
                   040006
1100      P:000102 0003F8            ori     #3,mr                             ; mask interrupts
1101      P:000103 0500BB            movec             #0,sp                   ; clear hardware stack pointer
1102      P:000104 0500BA            move              #0,omr                  ; operating mode 0
1103   
1104                       ;==================
1105   
1106      P:000105 240000            move              #0,X0
1107      P:000106 440000            move              X0,x:bits
1108   
1109      P:000107 0B0000            bchg    #Left_ch,x:bits
1110      P:000108 0A0020            bset    #Left_ch,x:bits
1111      P:000109 0A0000            bclr    #Left_ch,x:bits
1112   
1113   
1114                       ;========================================
1115   
1116   
1117      P:00010A 0BF080            jsr     ada_init                          ; initialize codec
                   00010D
1118   
1119                       pipe_loop
1120   
1121      P:00010C 0C010C            jmp     pipe_loop
1122   
1123                                 include 'ada_init.asm'                    ; used to include codec initialization routines
1124                                 page    132,60
1125                       ;**************************************************************************
1126                       ;       ADA_INIT.ASM    Ver 1.2
1127                       ;       Example program to initialize the CS4218
1128                       ;
1129                       ;       Copyright (c) MOTOROLA 1995, 1996, 1997, 1998
Motorola DSP56300 Assembler  Version 6.2.0   101-06-05  14:17:37  ada_init.asm  Page 2



1130                       ;                     Semiconductor Products Sector
1131                       ;                     Wireless Signal Processing Division
1132                       ;
1133                       ;       History:
1134                       ;                       14 June 1996:  RLR/LJD - ver 1.0
1135                       ;                       21 July 1997:  BEA     - ver 1.1
1136                       ;                       23 Sept 1998:  TTL     - ver 1.2
1137                       ;**************************************************************************
1138      X:000001                   org     x:
1139   
1140                       ; Codec control constants
1141      X:000001         CTRL_WD_HI ds     1
1142      X:000002         CTRL_WD_LO ds     1
1143   
1144   
1145                       ; GPIO  pin constants
1146   
1147                                                                           ; ESSI0 - audio data GPIO mode
1148                                                                           ; DSP                   CODEC
1149                                                                           ; ---------------------------
1150                       CODEC_RESET
1151      000000                     equ     0                                 ; bit0  SC00    --->    CODEC_RESET~
1152   
1153                                                                           ; ESSI1 - control data GPIO Mode
1154                                                                           ; DSP                   CODEC
1155                                                                           ;----------------------------
1156      000000           CCS       equ     0                                 ; bit0  SC10    --->    CCS~
1157      000001           CCLK      equ     1                                 ; bit1  SC11    --->    CCLK
1158      000002           CDIN      equ     2                                 ; bit2  SC12    --->    CDIN
1159   
1160                       ;**************************************************************************
1161                       ; Initialize the CS4218 codec
1162                       ; ---------------------------
1163                       ; Serial Mode 4 (SM4), DSP Slave/Codec Master, 32-bits per frame
1164                       ;
1165                       ; After a reset, the control port must be written once to initialize it
1166                       ; if the port will be accessed to read or write control bits.  The initial
1167                       ; write is a "dummy" write since the data is ignored by the codec.  A second
1168                       ; write is needed to configure the codec as desired.  Then, the control port
1169                       ; only needs to be written to when a change is desired, or to obtain status
1170                       ; information.
1171                       ;
1172                       ; Although only 23 bits contain useful data in CDIN, a minimum of 31 bits
1173                       ; must be written.
1174                       ;
1175                       ; CDIN
1176                       ;------------------------------------------------
1177                       ; bit 31                0
1178                       ;------------------------------------------------
1179                       ; bit 30                mask interrupt
1180                       ;                       0=no mask on MF5:\INT pin
1181                       ;                       1=mask on MF5:\INT pin
1182                       ;------------------------------------------------
1183                       ; bit 29                DO1
1184                       ;------------------------------------------------
1185                       ; bits 28-24            left output D/A sttenuation  (1.5dB steps)
Motorola DSP56300 Assembler  Version 6.2.0   101-06-05  14:17:37  ada_init.asm  Page 3



1186                       ;                       00000=No attenuation 0dB
1187                       ;                       11111=Max attenuation -46.5dB
1188                       ;------------------------------------------------
1189                       ; bits 23-19            right output D/A attenuation (1.5dB steps)
1190                       ;                       00000=No attenuation 0dB
1191                       ;                       11111=Max attenuation -46.5dB
1192                       ;------------------------------------------------
1193                       ; bit 18                mute D/A outputs
1194                       ;                       0=outputs ON
1195                       ;                       1=outputs MUTED
1196                       ;------------------------------------------------
1197                       ; bit 17                input mux, left select
1198                       ;                       0=RIN1
1199                       ;                       1=RIN2 (used on EVM)
1200                       ;------------------------------------------------
1201                       ; bit 16                input mux, right select
1202                       ;                       0=LIN1
1203                       ;                       1=LIN2 (used on EVM)
1204                       ;------------------------------------------------
1205                       ; bits 15-12            left input A/D gain (1.5dB steps)
1206                       ;                       0000=No gain 0dB
1207                       ;                       1111=Max gain +22.5dB
1208                       ;------------------------------------------------
1209                       ; bits 11-8             right input A/D gain (1.5dB steps)
1210                       ;                       0000=No gain 0dB
1211                       ;                       1111=Max gain +22.5dB
1212                       ;------------------------------------------------
1213                       ; bits 7-0              00000000
1214                       ;------------------------------------------------
1215                       ;**************************************************************************
1216   
1217   
1218      P:00010D                   org     p:
1219                       ada_init
1220   
1221                                                                           ; reset ESSI ports
1222      P:00010D 07F43F            movep             #$0000,x:M_PCRC         ; reset ESSI0 port
                   000000
1223      P:00010F 07F42F            movep             #$0000,x:M_PCRD         ; reset ESSI1 port
                   000000
1224   
1225                                                                           ; Set Control Register A and B
1226      P:000111 07F435            movep             #$101807,x:M_CRA0       ; 12.288MHz/16 = 768KHz SCLK
                   101807
1227                                                                           ; prescale modulus = 8
1228                                                                           ; frame rate divider = 2
1229                                                                           ; 16-bits per word
1230                                                                           ; 32-bits per frame
1231                                                                           ; 16-bit data aligned to bit 23
1232   
1233      P:000113 07F436            movep             #$ff330c,x:M_CRB0       ; Enable REIE,TEIE,RLIE,TLIE,
                   FF330C
1234                                                                           ; RIE,TIE,RE,TE0
1235                                                                           ; network mode, synchronous,
1236                                                                           ; out on rising/in on falling
1237                                                                           ; shift MSB first
Motorola DSP56300 Assembler  Version 6.2.0   101-06-05  14:17:37  ada_init.asm  Page 4



1238                                                                           ; external clock source drives SCK
1239                                                                           ; (codec is master)
1240                                                                           ; RX frame sync pulses active for
1241                                                                           ; 1 bit clock immediately before
1242                                                                           ; transfer period
1243                                                                           ; positive frame sync polarity
1244                                                                           ; frame sync length is 1-bit
1245   
1246                                                                           ; Configure GPIO pins -- (functionality and direction
)
1247      P:000115 07F43F            movep             #$0000,x:M_PCRC         ; Enable GPIO pin 0 SC00=CODEC_RESET
                   000000
1248      P:000117 07F42F            movep             #$0000,x:M_PCRD         ; Enable GPIO CSS (pin 0),CCLK (pin 1), CDIN (pin 2)
                   000000
1249   
1250      P:000119 07F43E            movep             #$0001,x:M_PRRC         ; set PC0=CODEC_RESET~ as output
                   000001
1251      P:00011B 07F42E            movep             #$0007,x:M_PRRD         ; set PD0=CCS~ as output
                   000007
1252                                                                           ; set PD1=CCLK as output
1253                                                                           ; set PD2=CDIN as output
1254   
1255                       ; Codec Reset
1256      P:00011D 013D00            bclr    #CODEC_RESET,x:M_PDRC             ; assert CODEC_RESET~
1257      P:00011E 012D00            bclr    #CCS,x:M_PDRD                     ; assert CCS~ -- allows control register to be writte
n to
1258   
1259                                                                           ; Delay to allow Codec to reset
1260      P:00011F 06E883            do      #1000,_delay_loop
                   000122
1261      P:000121 06E8A3            rep     #1000                             ; minimum 50 ms delay
1262      P:000122 000000            nop
1263                       _delay_loop
1264   
1265   
1266                       ; Setting up to send Codec control information
1267      P:000123 013D20            bset    #CODEC_RESET,x:M_PDRC             ; deassert CODEC_RESET~
1268   
1269   
1270                                                                           ; Sending control words
1271                       set_control
1272      P:000124 44F400            move              #CTRL_WD_12,x0          ; transfer control value to control variable
                   000300
1273      P:000126 440100            move              x0,x:CTRL_WD_HI
1274      P:000127 240000            move              #CTRL_WD_34,x0
1275      P:000128 440200            move              x0,x:CTRL_WD_LO
1276      P:000129 0BF080            jsr     codec_control                     ; send in dummy control information
                   000133
1277      P:00012B 0BF080            jsr     codec_control                     ; send in correct control information
                   000133
1278   
1279   
1280                                                                           ; Set and enable interrupts
1281      P:00012D 08F4BE            movep             #$000c,x:M_IPRP         ; set interrupt priority level for ESSI0 to 3
                   00000C
1282      P:00012F 00FCB8            andi    #$fc,mr                           ; enable interrupts
Motorola DSP56300 Assembler  Version 6.2.0   101-06-05  14:17:37  ada_init.asm  Page 5



1283   
1284                                                                           ; Set ESSI functionality
1285      P:000130 07F43F            movep             #$003e,x:M_PCRC         ; enable ESSI0 except SC00=CODEC_RESET
                   00003E
1286   
1287      P:000132 00000C            rts
1288   
1289   
1290                       ;-------------------------------------------------------------
1291                       ; codec_control routine
1292                       ;       Input:  CTRL_WD_LO and CTRL_WD_HI
1293                       ;       Output: CDIN
1294                       ;       Description: Used to send control information to CODEC
1295                       ;       NOTE: does not preserve the 'a' register.
1296                       ;-------------------------------------------------------------
1297                       codec_control
1298      P:000133 200013            clr     a
1299      P:000134 012D00            bclr    #CCS,x:M_PDRD                     ; assert CCS
1300      P:000135 548100            move              x:CTRL_WD_HI,a1         ; upper 16 bits of control data
1301      P:000136 0BF080            jsr     send_codec                        ; shift out upper control word
                   00013D
1302      P:000138 548200            move              x:CTRL_WD_LO,a1         ; lower 16 bits of control data
1303      P:000139 0BF080            jsr     send_codec                        ; shift out lower control word
                   00013D
1304      P:00013B 012D20            bset    #CCS,x:M_PDRD                     ; deassert CCS
1305      P:00013C 00000C            rts
1306   
1307   
1308                       ;---------------------------------------------------------------
1309                       ; send_codec routine
1310                       ;       Input:  a1 containing control information
1311                       ;       Output: sends bits to CDIN
1312                       ;       Description: Determines bits to send to CDIN
1313                       ;---------------------------------------------------------------
1314   
1315                       send_codec
1316      P:00013D 061080            do      #16,end_send_codec                ; 16 bits per word
                   000149
1317      P:00013F 012D21            bset    #CCLK,x:M_PDRD                    ; toggle CCLK clock high
1318      P:000140 0ACC17            jclr    #23,a1,bit_low                    ; test msb
                   000145
1319      P:000142 012D22            bset    #CDIN,x:M_PDRD                    ; send high into CDIN
1320      P:000143 0AF080            jmp     continue
                   000146
1321                       bit_low
1322      P:000145 012D02            bclr    #CDIN,x:M_PDRD                    ; send low into CDIN
1323                       continue
1324      P:000146 0602A0            rep     #2                                ; delay
1325      P:000147 000000            nop
1326      P:000148 012D01            bclr    #CCLK,x:M_PDRD                    ; restart cycle
1327      P:000149 200033            lsl     a                                 ; shift control word to 1 bit
1328                                                                           ; to left
1329                       end_send_codec
1330      P:00014A 00000C            rts
1331   
1332   
Motorola DSP56300 Assembler  Version 6.2.0   101-06-05  14:17:37  ada_init.asm  Page 6



1333   
1334   
1335                       ;****************************************************************************
1336                       ;       SSI0_ISR.ASM    Ver.2.0
1337                       ;       Example program to handle interrupts through
1338                       ;       the 56307 SSI0 to move audio through the CS4218
1339                       ;
1340                       ;       Copyright (c) MOTOROLA 1995, 1996, 1997, 1998
1341                       ;                     Semiconductor Products Sector
1342                       ;                     Digital Signal Processing Division
1343                       ;
1344                       ;
1345                       ;       History:
1346                       ;                       14 June 1996: RLR/LJD - ver 1.0
1347                       ;                       23 July 1997: BEA     - ver 1.1
1348                       ;                       1  june 2001: Dany
1349                       ;******************************************************************************
1350   
1351   
1352                       ;----the actual interrupt service routines (ISRs)  follow:
1353   
1354                       ;************************ SSI TRANSMIT ISR *********************************
1355                       ssi_txe_isr
1356      P:00014B 013704            bclr    #4,x:M_SSISR0                     ; Read SSISR to clear exception flag
1357                                                                           ; explicitly clears underrun flag
1358                       ssi_tx_isr
1359   
1360      P:00014C 000004            rti
1361   
1362   
1363   
1364                       ;********************* SSI TRANSMIT LAST SLOT ISR **************************
1365                       ssi_txls_isr
1366      P:00014D 0A0020            bset    #Left_ch,x:bits
1367      P:00014E 000004            rti
1368   
1369                       ;************************** SSI receive ISR ********************************
1370                       ssi_rxe_isr
1371      P:00014F 013705            bclr    #5,x:M_SSISR0                     ; Read SSISR to clear exception flag
1372                                                                           ; explicitly clears overrun flag
1373                       ssi_rx_isr
1374   
1375      P:000150 0444D8            movep             x:M_RX0,x0              ; Read a/d data
1376      P:000151 0A0080            jclr    #Left_ch,X:bits,endisr
                   000154
1377   
1378      P:000153 240000  esright   move              #0,x0                   ;mute the other channel
1379   
1380      P:000154 04C4DC  endisr    movep             x0,x:M_TX00             ; write d/a data
1381      P:000155 0B0000            bchg    #Left_ch,x:bits
1382      P:000156 000004            rti
1383   
1384   
1385   
1386                       ;********************** SSI receive last slot ISR **************************
1387                       ssi_rxls_isr
Motorola DSP56300 Assembler  Version 6.2.0   101-06-05  14:17:37  ada_init.asm  Page 7



1388   
1389   
1390      P:000157 000004            rti
1391   
1392                                 end

0    Errors
0    Warnings


